/**
 * Definition for singly-linked list.
 * class Node {
 *     val: number
 *     next: ListNode | null
 *     constructor(val?: number, next?: ListNode | null) {
 *         this.val = (val===undefined ? 0 : val)
 *         this.next = (next===undefined ? null : next)
 *     }
 * }
 */

function addTwoNumbers(l1: ListNode | null, l2: ListNode | null): ListNode | null {
    const res = new ListNode();
    let current = res;
    let carry = 0;

    while (l1!==null || l2!==null || carry!==0) {
        const val1 = l1 ? l1.val : 0;
        const val2 = l2 ? l2.val : 0;

        const total = val1 + val2 + carry;
        carry = Math.floor(total / 10);
        current.next = new ListNode(total % 10);
        current = current.next;

        if (l1!== null){
             l1 = l1.next;
        }
        if (l2!==null){ 
            l2 = l2.next;
        }
    }
    return res.next;
    
    
};
